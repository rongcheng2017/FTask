apply plugin: 'maven-publish'

version = VERSION_NAME
group = GROUP

def isReleaseBuild() {
    return VERSION_NAME.contains("SNAPSHOT") == false
}

def getReleaseRepositoryUrl() {
    return hasProperty('RELEASE_REPOSITORY_URL') ? RELEASE_REPOSITORY_URL
            : "http://maven.geelib.360.cn:8360/nexus/repository/mobiledj/"
}

def getSnapshotRepositoryUrl() {
    return hasProperty('SNAPSHOT_REPOSITORY_URL') ? SNAPSHOT_REPOSITORY_URL
            : "http://maven.geelib.360.cn:8360/nexus/repository/mobiledj-snapshot/"
}

def getRepositoryUsername() {
    return hasProperty('SONATYPE_NEXUS_USERNAME') ? SONATYPE_NEXUS_USERNAME : ""
}

def getRepositoryPassword() {
    return hasProperty('SONATYPE_NEXUS_PASSWORD') ? SONATYPE_NEXUS_PASSWORD : ""
}


afterEvaluate {
    publishing {
        publications {
            maven(MavenPublication) {
                groupId = GROUP
                artifactId = POM_ARTIFACT_ID
                version = VERSION_NAME
                from components.release

                pom {
                    name = POM_NAME
                    packaging = POM_PACKAGING
                    description = POM_DESCRIPTION
                    url = POM_URL

                    scm {
                        url = POM_SCM_URL
                        connection = POM_SCM_CONNECTION
                        developerConnection = POM_SCM_DEV_CONNECTION
                    }

                    licenses {
                        license {
                            name = POM_LICENCE_NAME
                            url = POM_LICENCE_URL
                            distribution = POM_LICENCE_DIST
                        }
                    }

                    developers {
                        developer {
                            id = POM_DEVELOPER_ID
                            name = POM_DEVELOPER_NAME
                        }
                    }
                }
            }
        }
        repositories {
            maven {
                name = 'release'
                url = getReleaseRepositoryUrl()
                allowInsecureProtocol=true
                credentials {
                    username = getRepositoryUsername()
                    password = getRepositoryPassword()
                }
            }
        }

    }
//    publishing {
//        publications {
//            maven(MavenPublication) {
//                groupId = GROUP
//                artifactId = POM_ARTIFACT_ID
//                version = VERSION_NAME
//                from components.java
//
//                pom {
//                    name= POM_NAME
//                    packaging= POM_PACKAGING
//                    description= POM_DESCRIPTION
//                    url= POM_URL
//
//                    scm {
//                        url =POM_SCM_URL
//                        connection= POM_SCM_CONNECTION
//                        developerConnection= POM_SCM_DEV_CONNECTION
//                    }
//
//                    licenses {
//                        license {
//                            name= POM_LICENCE_NAME
//                            url= POM_LICENCE_URL
//                            distribution =POM_LICENCE_DIST
//                        }
//                    }
//
//                    developers {
//                        developer {
//                            id= POM_DEVELOPER_ID
//                            name= POM_DEVELOPER_NAME
//                        }
//                    }
//                }
//            }
//        }
//        repositories {
//            maven {
//                // change URLs to point to your repos, e.g. http://my.org/repo
//                def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
//                def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
//                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//            }
//        }
//
//    }

}
//afterEvaluate { project ->
//    uploadArchives {
//        repositories {
//            mavenDeployer {
////                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//
//                repository(url: getReleaseRepositoryUrl()) {
//                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
//                }
//                snapshotRepository(url: getSnapshotRepositoryUrl()) {
//                    authentication(userName: getRepositoryUsername(), password: getRepositoryPassword())
//                }
//
//                configurePom(pom)
//            }
//        }
//    }
//    tasks.create("installLocally", Upload) {
//        configuration = configurations.archives
//
//        repositories {
//            mavenDeployer {
//                repository(url: "file://${rootProject.buildDir}/localMaven")
//
//                configurePom(pom)
//            }
//        }
//    }
//    if (project.getPlugins().hasPlugin('com.android.application') ||
//            project.getPlugins().hasPlugin('com.android.library')) {
//        task install(type: Upload, dependsOn: assemble) {
//            repositories.mavenInstaller {
//                configuration = configurations.archives
//
//                configurePom(pom)
//            }
//        }
//
//        task androidJavadocs(type: Javadoc) {
//            source = android.sourceSets.main.java.source
//            classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//        }
//
//        task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
//            classifier = 'javadoc'
//            from androidJavadocs.destinationDir
//        }
//
//        task androidSourcesJar(type: Jar) {
//            classifier = 'sources'
//            from android.sourceSets.main.java.source
//        }
//    } else {
//        install {
//            repositories.mavenInstaller {
//                configurePom(pom)
//            }
//        }
//
//        task sourcesJar(type: Jar, dependsOn:classes) {
//            classifier = 'sources'
//            from sourceSets.main.allSource
//        }
//
//        task javadocJar(type: Jar, dependsOn:javadoc) {
//            classifier = 'javadoc'
//            from javadoc.destinationDir
//        }
//    }
//
//    if (JavaVersion.current().isJava8Compatible()) {
//        allprojects {
//            tasks.withType(Javadoc) {
//                options.addStringOption('Xdoclint:none', '-quiet')
//            }
//        }
//    }
//
//    artifacts {
//        if (project.getPlugins().hasPlugin('com.android.application') ||
//                project.getPlugins().hasPlugin('com.android.library')) {
//            archives androidSourcesJar
//            archives androidJavadocsJar
//        } else {
//            archives sourcesJar
//            archives javadocJar
//        }
//    }
//}